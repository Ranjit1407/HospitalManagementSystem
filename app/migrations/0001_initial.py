# Generated by Django 4.2.6 on 2024-04-16 08:38

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("is_doctor", models.BooleanField(default=False)),
                ("is_patient", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Appointment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "A_DATETIME",
                    models.DateTimeField(
                        blank=True,
                        default=datetime.datetime(2024, 4, 16, 8, 38, 29, 422955),
                    ),
                ),
                ("is_complete", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Drug",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("DRUG_NAME", models.CharField(max_length=50)),
                ("DRUG_DESCRIPTION", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="LabTest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("TEST_NAME", models.CharField(max_length=50)),
                ("TEST_DESCRIPTION", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="Doctor",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("F_NAME", models.CharField(max_length=50)),
                ("L_NAME", models.CharField(max_length=50)),
                ("STREET", models.CharField(max_length=50)),
                ("CITY", models.CharField(max_length=50)),
                ("STATE", models.CharField(max_length=50)),
                ("COUNTRY", models.CharField(max_length=50)),
                ("SPECIALIZATION", models.CharField(max_length=50)),
                ("PHONE", models.CharField(max_length=20)),
                (
                    "image",
                    models.ImageField(
                        default="{% static 'default.jped' %}", upload_to="profile_pic"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Patient",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("F_NAME", models.CharField(max_length=50)),
                ("L_NAME", models.CharField(max_length=50)),
                ("STREET", models.CharField(max_length=50)),
                ("CITY", models.CharField(max_length=50)),
                ("STATE", models.CharField(max_length=50)),
                ("COUNTRY", models.CharField(max_length=50)),
                ("DOB", models.DateField(blank=True, null=True)),
                ("PHONE", models.CharField(max_length=20)),
                (
                    "image",
                    models.ImageField(
                        default="{% static 'default.jped' %}", upload_to="profile_pic"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Treatment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("T_Desc", models.TextField()),
                ("Drug", models.ManyToManyField(to="app.drug")),
                ("LabTest", models.ManyToManyField(to="app.labtest")),
                (
                    "appointment",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="app.appointment",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="appointment",
            name="D_ID",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="app.doctor"
            ),
        ),
        migrations.AddField(
            model_name="appointment",
            name="P_ID",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="app.patient"
            ),
        ),
    ]
